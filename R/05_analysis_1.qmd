---
title: "05_Analysis_01"
format: html
editor: visual
---

DEseq2 analysis

```{r}
library(DESeq2)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggrepel)
```

Step 1: preparing

Making sure the row names in coldata matches to column names in count data

```{r}
dim(sample_table_DEseq)
```

```{r}
all(colnames(count_data_clean_DEseq)%in%rownames(sample_table_DEseq |> column_to_rownames(var = "sample")))
```

```{r}
sample_table|>
  mutate(smoker_groups=factor(smoker_groups))

dds <- DESeqDataSetFromMatrix(countData = count_data_clean_DEseq_trans,
                              colData = sample_table_DEseq,
                              design= ~ smoker_groups)
dds <- DESeq(dds)
resultsNames(dds) # lists the coefficients

```

```{r}
res <- results(dds, contrast = list(c("smoker_groups_heavy_vs_light", "smoker_groups_medium_vs_light")), alpha=0.05)
# or to shrink log fold changes association with condition:

summary(res)
```

Convert results from DESeq to a tidy dataframe, select "gene", "log2FoldChange" and "pvalue" columns.

```{r}
genes <- c("EGFR", "KRAS", "SPINK1", "SPP1")
#, "MET", "LKB1", "BRAF", "PIK3CA", "ALK", "RET", "ROS1"
  
res_tidy <- res |>
  as_tibble(rownames = "gene") |>
  select(gene, log2FoldChange, pvalue, padj)

# Add to the plot
ggplot(res_tidy, aes(x = log2FoldChange, y = -log10(pvalue))) +
  geom_point(aes(color = ifelse(!is.na(padj) & 
                                  padj < 0.05 & 
                                  abs(log2FoldChange) > 2, 
                                "Significant", "Not significant")), 
                                alpha = 0.8) +
  labs(title = "Title of the Plot", color = "Significant/ Unsignificant", x = "log2FC", y = "-log10(pvalue)") +
  geom_point(
    data = res_tidy |> filter (gene %in% genes), 
    size=2,
    color = "black") +
  geom_label_repel(
    data = res_tidy |> filter (gene %in% genes), 
    aes(label=gene),
    size=2,
    color = "black", 
    max.overlaps=Inf,
    segment.color="transparent") +
  theme_minimal()
```

```{r}
res_tidy |>
  filter(gene %in% genes)
```

PCA plotting

```{r}

```
